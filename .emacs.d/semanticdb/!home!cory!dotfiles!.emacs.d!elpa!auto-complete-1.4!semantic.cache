;; Object auto-complete-1.4/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "auto-complete-1.4/"
  :tables
  (list
    (semanticdb-table "auto-complete-config.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [912 925])
            ("auto-complete" include nil nil [928 952])
            ("ac-imenu-index" variable nil nil [992 1019])
            ("ac-clear-variable-every-10-minutes" code nil nil [1021 1073])
            ("ac-imenu-candidates" function nil nil [1075 2308])
            ("ac-define-source" code nil nil [2310 2413])
            ("ac-gtags-candidate-face" variable
               (:default-value (quote ((t (:background "lightgray" :foreground "navy"))))
                :type "face")
                nil [2425 2565])
            ("ac-gtags-selection-face" variable
               (:default-value (quote ((t (:background "navy" :foreground "white"))))
                :type "face")
                nil [2567 2717])
            ("ac-gtags-candidate" function nil nil [2719 2852])
            ("ac-define-source" code nil nil [2854 3049])
            ("ac-yasnippet-candidate-face" variable
               (:default-value (quote ((t (:background "sandybrown" :foreground "black"))))
                :type "face")
                nil [3065 3216])
            ("ac-yasnippet-selection-face" variable
               (:default-value (quote ((t (:background "coral3" :foreground "white"))))
                :type "face")
                nil [3218 3378])
            ("ac-yasnippet-table-hash" function (:arguments ("table")) nil [3380 3560])
            ("ac-yasnippet-table-parent" function (:arguments ("table")) nil [3562 3752])
            ("ac-yasnippet-candidate-1" function (:arguments ("table")) nil [3754 4249])
            ("ac-yasnippet-candidates" function nil nil [4251 4737])
            ("ac-define-source" code nil nil [4739 4982])
            ("ac-semantic-candidates" function (:arguments ("prefix")) nil [4997 5401])
            ("ac-define-source" code nil nil [5403 5650])
            ("ac-define-source" code nil nil [5652 5859])
            ("ac-eclim-candidates" function nil nil [5871 5992])
            ("ac-define-source" code nil nil [5994 6117])
            ("ac-css-property-alist" variable
               (:constant-flag t
                :default-value (quote (("azimuth" angle "left-side" "far-left" "left" "center-left" "center" "center-right" "right" "far-right" "right-side" "behind" "leftwards" "rightwards") ("background" background-color background-image background-repeat background-attachment background-position) ("background-attachment" "scroll" "fixed") ("background-color" color "transparent") ("background-image" uri "none") ("background-position" percentage length "left" "center" "right" percentage length "top" "center" "bottom" "left" "center" "right" "top" "center" "bottom") ("background-repeat" "repeat" "repeat-x" "repeat-y" "no-repeat") ("border" border-width border-style border-color) ("border-bottom" border) ("border-bottom-color" border-color) ("border-bottom-style" border-style) ("border-bottom-width" border-width) ("border-collapse" "collapse" "separate") ("border-color" color "transparent") ("border-left" border) ("border-left-color" border-color) ("border-left-style" border-style) ("border-left-width" border-width) ("border-right" border) ("border-right-color" border-color) ("border-right-style" border-style) ("border-right-width" border-width) ("border-spacing" length length) ("border-style" border-style) ("border-top" border) ("border-top-color" border-color) ("border-top-style" border-style) ("border-top-width" border-width) ("border-width" border-width) ("bottom" length percentage "auto") ("caption-side" "top" "bottom") ("clear" "none" "left" "right" "both") ("clip" shape "auto") ("color" color) ("content" "normal" "none" string uri counter "attr()" "open-quote" "close-quote" "no-open-quote" "no-close-quote") ("counter-increment" identifier integer "none") ("counter-reset" identifier integer "none") ("cue" cue-before cue-after) ("cue-after" uri "none") ("cue-before" uri "none") ("cursor" uri "*" "auto" "crosshair" "default" "pointer" "move" "e-resize" "ne-resize" "nw-resize" "n-resize" "se-resize" "sw-resize" "s-resize" "w-resize" "text" "wait" "help" "progress") ("direction" "ltr" "rtl") ("display" "inline" "block" "list-item" "run-in" "inline-block" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none") ("elevation" angle "below" "level" "above" "higher" "lower") ("empty-cells" "show" "hide") ("float" "left" "right" "none") ("font" font-style font-variant font-weight font-size "/" line-height font-family "caption" "icon" "menu" "message-box" "small-caption" "status-bar") ("font-family" family-name generic-family) ("font-size" absolute-size relative-size length percentage) ("font-style" "normal" "italic" "oblique") ("font-variant" "normal" "small-caps") ("font-weight" "normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900") ("height" length percentage "auto") ("left" length percentage "auto") ("letter-spacing" "normal" length) ("line-height" "normal" number length percentage) ("list-style" list-style-type list-style-position list-style-image) ("list-style-image" uri "none") ("list-style-position" "inside" "outside") ("list-style-type" "disc" "circle" "square" "decimal" "decimal-leading-zero" "lower-roman" "upper-roman" "lower-greek" "lower-latin" "upper-latin" "armenian" "georgian" "lower-alpha" "upper-alpha" "none") ("margin" margin-width) ("margin-bottom" margin-width) ("margin-left" margin-width) ("margin-right" margin-width) ("margin-top" margin-width) ("max-height" length percentage "none") ("max-width" length percentage "none") ("min-height" length percentage) ("min-width" length percentage) ("orphans" integer) ("outline" outline-color outline-style outline-width) ("outline-color" color "invert") ("outline-style" border-style) ("outline-width" border-width) ("overflow" "visible" "hidden" "scroll" "auto") ("padding" padding-width) ("padding-bottom" padding-width) ("padding-left" padding-width) ("padding-right" padding-width) ("padding-top" padding-width) ("page-break-after" "auto" "always" "avoid" "left" "right") ("page-break-before" "auto" "always" "avoid" "left" "right") ("page-break-inside" "avoid" "auto") ("pause" time percentage) ("pause-after" time percentage) ("pause-before" time percentage) ("pitch" frequency "x-low" "low" "medium" "high" "x-high") ("pitch-range" number) ("play-during" uri "mix" "repeat" "auto" "none") ("position" "static" "relative" "absolute" "fixed") ("quotes" string string "none") ("richness" number) ("right" length percentage "auto") ("speak" "normal" "none" "spell-out") ("speak-header" "once" "always") ("speak-numeral" "digits" "continuous") ("speak-punctuation" "code" "none") ("speech-rate" number "x-slow" "slow" "medium" "fast" "x-fast" "faster" "slower") ("stress" number) ("table-layout" "auto" "fixed") ("text-align" "left" "right" "center" "justify") ("text-decoration" "none" "underline" "overline" "line-through" "blink") ("text-indent" length percentage) ("text-transform" "capitalize" "uppercase" "lowercase" "none") ("top" length percentage "auto") ("unicode-bidi" "normal" "embed" "bidi-override") ("vertical-align" "baseline" "sub" "super" "top" "text-top" "middle" "bottom" "text-bottom" percentage length) ("visibility" "visible" "hidden" "collapse") ("voice-family" specific-voice generic-voice "*" specific-voice generic-voice) ("volume" number percentage "silent" "x-soft" "soft" "medium" "loud" "x-loud") ("white-space" "normal" "pre" "nowrap" "pre-wrap" "pre-line") ("widows" integer) ("width" length percentage "auto") ("word-spacing" "normal" length) ("z-index" "auto" integer))))
                nil [6157 12387])
            ("ac-css-value-classes" variable
               (:constant-flag t
                :default-value (quote ((absolute-size "xx-small" "x-small" "small" "medium" "large" "x-large" "xx-large") (border-style "none" "hidden" "dotted" "dashed" "solid" "double" "groove" "ridge" "inset" "outset") (color "aqua" "black" "blue" "fuchsia" "gray" "green" "lime" "maroon" "navy" "olive" "orange" "purple" "red" "silver" "teal" "white" "yellow" "rgb") (counter "counter") (family-name "Courier" "Helvetica" "Times") (generic-family "serif" "sans-serif" "cursive" "fantasy" "monospace") (generic-voice "male" "female" "child") (margin-width "auto") (relative-size "larger" "smaller") (shape "rect") (uri "url"))))
                nil [12389 13196])
            ("ac-css-pseudo-classes" variable
               (:constant-flag t
                :default-value (quote ("active" "after" "before" "first" "first-child" "first-letter" "first-line" "focus" "hover" "lang" "left" "link" "right" "visited")))
                nil [13198 13430])
            ("ac-css-property" variable nil nil [13432 13490])
            ("ac-css-prefix" function nil nil [13492 13683])
            ("ac-css-property-candidates" function nil nil [13685 14322])
            ("ac-define-source" code nil nil [14324 14450])
            ("ac-define-source" code nil nil [14461 14599])
            ("ac-define-source" code nil nil [14612 14738])
            ("ac-ropemacs-loaded" variable nil nil [14785 14816])
            ("ac-ropemacs-require" function nil nil [14817 15067])
            ("ac-ropemacs-setup" function nil nil [15069 15255])
            ("ac-ropemacs-initialize" function nil nil [15257 15538])
            ("ac-ropemacs-completions-cache" variable nil nil [15540 15582])
            ("ac-source-ropemacs" variable (:default-value (quote ((init lambda nil (setq ac-ropemacs-completions-cache (mapcar (lambda (completion) (concat ac-prefix completion)) (ignore-errors (rope-completions))))) (candidates . ac-ropemacs-completions-cache)))) nil [15583 15915])
            ("ac-source-rcodetools" variable (:default-value (quote ((init lambda nil (require (quote rcodetools)) (condition-case x (save-excursion (rct-exec-and-eval rct-complete-command-name "--completion-emacs-icicles")) (error) (setq rct-method-completion-table nil))) (candidates lambda nil (all-completions ac-prefix (mapcar (lambda (completion) (replace-regexp-in-string "	.*$" "" (car completion))) rct-method-completion-table)))))) nil [15932 16552])
            ("ac-common-setup" function nil nil [16580 16658])
            ("ac-emacs-lisp-mode-setup" function nil nil [16660 16835])
            ("ac-cc-mode-setup" function nil nil [16837 16943])
            ("ac-ruby-mode-setup" function nil nil [16945 16974])
            ("ac-css-mode-setup" function nil nil [16976 17070])
            ("ac-config-default" function nil nil [17072 17501])
            ("auto-complete-config" package nil nil [17503 17534]))          
      :file "auto-complete-config.el"
      :pointmax 17573
      :fsize 17572
      :lastmodtime '(20760 3074)
      :unmatched-syntax '((close-paren 925 . 926) (symbol 892 . 909) (open-paren 891 . 892)))
    (semanticdb-table "auto-complete-autoloads.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("auto-complete-autoloads" package nil nil [222 256]))          
      :file "auto-complete-autoloads.el"
      :pointmax 417
      :fsize 416
      :lastmodtime '(20760 3074)
      :unmatched-syntax nil)
    (semanticdb-table "auto-complete.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [1372 1385])
            ("popup" include nil nil [1388 1404])
            ("ac-error" function (:arguments ("var")) nil [1425 1609])
            ("auto-complete" customgroup (:user-visible-flag t) nil [1634 1720])
            ("ac-delay" variable (:default-value 0.1) nil [1722 1829])
            ("ac-auto-show-menu" variable (:default-value 0.8) nil [1831 2070])
            ("ac-show-menu-immediately-on-auto-complete" variable (:default-value t) nil [2072 2238])
            ("ac-expand-on-auto-complete" variable (:default-value t) nil [2240 2395])
            ("ac-disable-faces" variable (:default-value (quote (font-lock-comment-face font-lock-string-face font-lock-doc-face))) nil [2397 2608])
            ("ac-stop-flymake-on-completing" variable (:default-value t) nil [2610 2754])
            ("ac-use-fuzzy" variable (:default-value t) nil [2756 2861])
            ("ac-fuzzy-cursor-color" variable (:default-value "red") nil [2863 2974])
            ("ac-use-comphist" variable (:default-value t) nil [2976 3100])
            ("ac-comphist-threshold" variable (:default-value 0.7) nil [3102 3228])
            ("ac-comphist-file" variable (:default-value (expand-file-name (concat (if (boundp (quote user-emacs-directory)) user-emacs-directory "~/.emacs.d/") "/ac-comphist.dat"))) nil [3230 3542])
            ("ac-user-dictionary" variable nil nil [3544 3655])
            ("ac-dictionary-files" variable (:default-value (quote ("~/.dict"))) nil [3657 3772])
            ("defvaralias" code nil nil [3773 3833])
            ("ac-dictionary-directories" variable (:default-value (ignore-errors (when load-file-name (let ((installed-dir (file-name-directory load-file-name))) (loop for name in (quote ("ac-dict" "dict")) for dir = (concat installed-dir name) if (file-directory-p dir) collect dir))))) nil [3835 4225])
            ("ac-use-quick-help" variable (:default-value t) nil [4227 4333])
            ("ac-quick-help-delay" variable (:default-value 1.5) nil [4335 4439])
            ("ac-menu-height" variable (:default-value 10) nil [4441 4545])
            ("defvaralias" code nil nil [4546 4601])
            ("ac-quick-help-height" variable (:default-value 20) nil [4603 4709])
            ("ac-quick-help-prefer-pos-tip" variable (:default-value t) nil [4711 4879])
            ("defvaralias" code nil nil [4880 4947])
            ("ac-candidate-limit" variable nil nil [4949 5084])
            ("defvaralias" code nil nil [5085 5136])
            ("ac-modes" variable (:default-value (quote (emacs-lisp-mode lisp-mode lisp-interaction-mode slime-repl-mode c-mode cc-mode c++-mode java-mode malabar-mode clojure-mode clojurescript-mode scala-mode scheme-mode ocaml-mode tuareg-mode coq-mode haskell-mode agda-mode agda2-mode perl-mode cperl-mode python-mode ruby-mode lua-mode ecmascript-mode javascript-mode js-mode js2-mode php-mode css-mode makefile-mode sh-mode fortran-mode f90-mode ada-mode xml-mode sgml-mode ts-mode))) nil [5138 5733])
            ("ac-compatible-packages-regexp" variable (:default-value "^ac-") nil [5735 5891])
            ("ac-non-trigger-commands" variable (:default-value (quote (*table--cell-self-insert-command))) nil [5893 6079])
            ("ac-trigger-commands" variable (:default-value (quote (self-insert-command))) nil [6081 6265])
            ("ac-trigger-commands-on-completing" variable (:default-value (quote (delete-backward-char backward-delete-char backward-delete-char-untabify))) nil [6267 6528])
            ("ac-trigger-key" variable nil nil [6530 7000])
            ("ac-auto-start" variable (:default-value 2) nil [7002 7415])
            ("ac-stop-words" variable nil nil [7417 7534])
            ("defvaralias" code nil nil [7535 7575])
            ("ac-use-dictionary-as-stop-words" variable (:default-value t) nil [7577 7743])
            ("ac-ignore-case" variable (:default-value (quote smart)) nil [7745 8081])
            ("ac-dwim" variable (:default-value t) nil [8083 8210])
            ("ac-use-menu-map" variable nil nil [8212 8366])
            ("ac-use-overriding-local-map" variable nil nil [8368 8559])
            ("ac-completion-face" variable
               (:default-value (quote ((t (:foreground "darkgray" :underline t))))
                :type "face")
                nil [8561 8691])
            ("ac-candidate-face" variable
               (:default-value (quote ((t (:background "lightgray" :foreground "black"))))
                :type "face")
                nil [8693 8823])
            ("ac-candidate-mouse-face" variable
               (:default-value (quote ((t (:background "blue" :foreground "white"))))
                :type "face")
                nil [8825 8962])
            ("ac-selection-face" variable
               (:default-value (quote ((t (:background "steelblue" :foreground "white"))))
                :type "face")
                nil [8964 9103])
            ("auto-complete-mode-hook" variable nil nil [9105 9176])
            ("auto-complete-mode" variable nil nil [9206 9287])
            ("ac-cursor-color" variable nil nil [9289 9339])
            ("ac-inline" variable nil nil [9341 9395])
            ("ac-menu" variable nil nil [9397 9436])
            ("ac-show-menu" variable nil nil [9438 9500])
            ("ac-last-completion" variable nil nil [9502 9597])
            ("ac-quick-help" variable nil nil [9599 9649])
            ("ac-completing" variable nil nil [9651 9746])
            ("ac-buffer" variable nil nil [9748 9813])
            ("ac-point" variable nil nil [9815 9863])
            ("ac-last-point" variable nil nil [9865 9927])
            ("ac-prefix" variable nil nil [9929 9970])
            ("defvaralias" code nil nil [9971 10006])
            ("ac-selected-candidate" variable nil nil [10008 10071])
            ("ac-common-part" variable nil nil [10073 10195])
            ("ac-whole-common-part" variable nil nil [10197 10320])
            ("ac-prefix-overlay" variable nil nil [10322 10383])
            ("ac-timer" variable nil nil [10385 10433])
            ("ac-show-menu-timer" variable nil nil [10435 10492])
            ("ac-quick-help-timer" variable nil nil [10494 10553])
            ("ac-triggered" variable nil nil [10555 10600])
            ("ac-limit" variable nil nil [10602 10672])
            ("ac-candidates" variable nil nil [10674 10724])
            ("ac-candidates-cache" variable nil nil [10726 10803])
            ("ac-fuzzy-enable" variable nil nil [10805 10878])
            ("ac-dwim-enable" variable nil nil [10880 10958])
            ("ac-mode-map" variable (:default-value (make-sparse-keymap)) nil [10960 11097])
            ("ac-completing-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "	" (quote ac-expand)) (define-key map [tab] (quote ac-expand)) (define-key map "" (quote ac-complete)) (define-key map [return] (quote ac-complete)) (define-key map (kbd "M-TAB") (quote auto-complete)) (define-key map "" (quote ac-isearch)) (define-key map "\356" (quote ac-next)) (define-key map "\360" (quote ac-previous)) (define-key map [down] (quote ac-next)) (define-key map [up] (quote ac-previous)) (define-key map [f1] (quote ac-help)) (define-key map [M-f1] (quote ac-persist-help)) (define-key map (kbd "C-?") (quote ac-help)) (define-key map (kbd "C-M-?") (quote ac-persist-help)) (define-key map [C-down] (quote ac-quick-help-scroll-down)) (define-key map [C-up] (quote ac-quick-help-scroll-up)) (define-key map "\216" (quote ac-quick-help-scroll-down)) (define-key map "\220" (quote ac-quick-help-scroll-up)) (dotimes (i 9) (let ((symbol (intern (format "ac-complete-%d" (1+ i))))) (fset symbol (\` (lambda nil (interactive) (when (and (ac-menu-live-p) (popup-select ac-menu (\, i))) (ac-complete))))) (define-key map (read-kbd-macro (format "M-%s" (1+ i))) symbol))) map)) nil [11099 12344])
            ("defvaralias" code nil nil [12345 12399])
            ("ac-menu-map" variable (:default-value (let ((map (make-sparse-keymap))) (set-keymap-parent map ac-completing-map) (define-key map "" (quote ac-next)) (define-key map "" (quote ac-previous)) (define-key map [mouse-1] (quote ac-mouse-1)) (define-key map [down-mouse-1] (quote ac-ignore)) (define-key map [mouse-4] (quote ac-mouse-4)) (define-key map [mouse-5] (quote ac-mouse-5)) map)) nil [12401 12812])
            ("ac-current-map" variable (:default-value (let ((map (make-sparse-keymap))) (set-keymap-parent map ac-completing-map) map)) nil [12814 12928])
            ("ac-match-function" variable (:default-value (quote all-completions)) nil [12930 13001])
            ("ac-prefix-definitions" variable (:default-value (quote ((symbol . ac-prefix-symbol) (file . ac-prefix-file) (valid-file . ac-prefix-valid-file) (c-dot . ac-prefix-c-dot) (c-dot-ref . ac-prefix-c-dot-ref)))) nil [13003 13241])
            ("ac-sources" variable (:default-value (quote (ac-source-words-in-same-mode-buffers))) nil [13243 13330])
            ("make-variable-buffer-local" code nil nil [13331 13371])
            ("ac-compiled-sources" variable nil nil [13373 13442])
            ("ac-current-sources" variable nil nil [13444 13546])
            ("ac-omni-completion-sources" variable nil nil [13548 13616])
            ("ac-current-prefix-def" variable nil nil [13618 13652])
            ("ac-ignoring-prefix-def" variable nil nil [13654 13689])
            ("ac-comphist" variable nil nil [13731 13791])
            ("ac-comphist-make-tab" function nil nil [13793 13860])
            ("ac-comphist-tab" function (:arguments ("db")) nil [13862 13906])
            ("ac-comphist-cache" function (:arguments ("db")) nil [13908 13954])
            ("ac-comphist-make" function (:arguments ("tab")) nil [13956 14080])
            ("ac-comphist-get" function (:arguments ("db" "string" "create")) nil [14082 14341])
            ("ac-comphist-add" function (:arguments ("db" "string" "prefix")) nil [14343 14636])
            ("ac-comphist-score" function (:arguments ("db" "string" "prefix")) nil [14638 15787])
            ("ac-comphist-sort" function (:arguments ("db" "collection" "prefix" "threshold")) nil [15789 16701])
            ("ac-comphist-serialize" function (:arguments ("db")) nil [16703 16872])
            ("ac-comphist-deserialize" function (:arguments ("sexp")) nil [16874 17240])
            ("ac-comphist-init" function nil nil [17242 17338])
            ("ac-comphist-load" function nil nil [17340 17729])
            ("ac-comphist-save" function nil nil [17731 17957])
            ("ac-buffer-dictionary" variable nil nil [17978 18011])
            ("ac-file-dictionary" variable (:default-value (make-hash-table :test (quote equal))) nil [18012 18070])
            ("ac-clear-dictionary-cache" function nil nil [18072 18328])
            ("ac-file-dictionary" function (:arguments ("filename")) nil [18330 18737])
            ("ac-mode-dictionary" function (:arguments ("mode")) nil [18739 19068])
            ("ac-buffer-dictionary" function (:arguments ("buffer")) nil [19070 19518])
            ("ac-menu-at-wrapper-line-p" function nil nil [19555 19834])
            ("ac-stop-word-p" function (:arguments ("word")) nil [19836 19990])
            ("ac-prefix-symbol" function nil nil [19992 20130])
            ("defalias" code nil nil [20131 20178])
            ("ac-prefix-file" function nil nil [20180 20310])
            ("ac-prefix-valid-file" function nil nil [20312 20920])
            ("ac-prefix-c-dot" function nil nil [20922 21092])
            ("ac-prefix-c-dot-ref" function nil nil [21094 21299])
            ("ac-define-prefix" function (:arguments ("name" "prefix")) nil [21301 21487])
            ("ac-match-substring" function (:arguments ("prefix" "candidates")) nil [21489 21685])
            ("ac-source-entity" function (:arguments ("source")) nil [21687 21786])
            ("ac-source-available-p" function (:arguments ("source")) nil [21788 22689])
            ("ac-compile-sources" function (:arguments ("sources")) nil [22691 23539])
            ("ac-compiled-sources" function nil nil [23541 23675])
            ("ac-menu-live-p" function nil nil [23677 23730])
            ("ac-menu-create" function (:arguments ("point" "width" "height")) nil [23732 24220])
            ("ac-menu-delete" function nil nil [24222 24310])
            ("ac-inline-overlay" function nil nil [24312 24363])
            ("ac-inline-live-p" function nil nil [24365 24435])
            ("ac-inline-show" function (:arguments ("point" "string")) nil [24437 26364])
            ("ac-inline-delete" function nil nil [26366 26508])
            ("ac-inline-hide" function nil nil [26510 26846])
            ("ac-inline-update" function nil nil [26848 27276])
            ("ac-put-prefix-overlay" function nil nil [27278 27848])
            ("ac-remove-prefix-overlay" function nil nil [27850 28165])
            ("ac-activate-completing-map" function nil nil [28167 28554])
            ("ac-deactivate-completing-map" function nil nil [28556 28896])
            ("ac-selected-candidate" function nil nil [28898 28984])
            ("ac-prefix" function (:arguments ("requires" "ignore-list")) nil [28986 30593])
            ("ac-init" function nil nil [30595 30965])
            ("ac-candidates-1" function (:arguments ("source")) nil [30967 33201])
            ("ac-candidates" function nil nil [33203 34913])
            ("ac-update-candidates" function (:arguments ("cursor" "scroll-top")) nil [34915 35548])
            ("ac-reposition" function nil nil [35550 35910])
            ("ac-cleanup" function nil nil [35912 37365])
            ("ac-abort" function nil nil [37367 37426])
            ("ac-expand-string" function (:arguments ("string" "remove-undo-boundary")) nil [37428 38759])
            ("ac-set-trigger-key" function (:arguments ("key")) nil [38761 39145])
            ("ac-set-timer" function nil nil [39147 39268])
            ("ac-cancel-timer" function nil nil [39270 39375])
            ("ac-update" function (:arguments ("force")) nil [39377 40178])
            ("ac-update-greedy" function (:arguments ("force")) nil [40180 40496])
            ("ac-set-show-menu-timer" function nil nil [40498 40748])
            ("ac-cancel-show-menu-timer" function nil nil [40750 40895])
            ("ac-show-menu" function nil nil [40897 41047])
            ("ac-help" function (:arguments ("persist")) nil [41049 41164])
            ("ac-persist-help" function nil nil [41166 41222])
            ("ac-last-help" function (:arguments ("persist")) nil [41224 41372])
            ("ac-last-persist-help" function nil nil [41374 41440])
            ("ac-set-quick-help-timer" function nil nil [41442 41657])
            ("ac-cancel-quick-help-timer" function nil nil [41659 41808])
            ("ac-pos-tip-show-quick-help" function (:arguments ("menu" "item" "args")) nil [41810 42780])
            ("ac-quick-help-use-pos-tip-p" function nil nil [42782 42905])
            ("ac-quick-help" function (:arguments ("force")) nil [42907 43531])
            ("ac-remove-quick-help" function nil nil [43533 43732])
            ("ac-last-quick-help" function nil nil [43734 44330])
            ("ac-define-quick-help-command" function (:arguments ("name" "arglist" "body")) nil [44332 44509])
            ("ac-define-quick-help-command" code nil nil [44511 44647])
            ("ac-define-quick-help-command" code nil nil [44649 44781])
            ("ac-isearch-callback" function (:arguments ("list")) nil [44816 44895])
            ("ac-isearch" function nil nil [44897 45103])
            ("auto-complete" function
               (:user-visible-flag t
                :arguments ("sources"))
                nil [45139 46101])
            ("ac-fuzzy-complete" function (:user-visible-flag t) nil [46103 46632])
            ("ac-next" function (:user-visible-flag t) nil [46634 46840])
            ("ac-previous" function (:user-visible-flag t) nil [46842 47064])
            ("ac-expand" function (:user-visible-flag t) nil [47066 47647])
            ("ac-expand-common" function (:user-visible-flag t) nil [47649 47991])
            ("ac-complete-1" function (:arguments ("candidate")) nil [47993 48603])
            ("ac-complete" function (:user-visible-flag t) nil [48605 48703])
            ("ac-start" function
               (:user-visible-flag t
                :arguments ("requires" "force-init"))
                nil [48705 50010])
            ("ac-stop" function (:user-visible-flag t) nil [50012 50116])
            ("ac-ignore" function
               (:user-visible-flag t
                :arguments ("ignore"))
                nil [50118 50188])
            ("ac-mouse-1" function (:arguments ("event")) nil [50190 50314])
            ("ac-mouse-4" function (:arguments ("event")) nil [50316 50378])
            ("ac-mouse-5" function (:arguments ("event")) nil [50380 50438])
            ("ac-trigger-key-command" function (:arguments ("force")) nil [50440 50634])
            ("ac-clear-variables-every-minute-timer" variable nil nil [50666 50716])
            ("ac-clear-variables-after-save" variable nil nil [50717 50759])
            ("ac-clear-variables-every-minute" variable nil nil [50760 50804])
            ("ac-minutes-counter" variable nil nil [50805 50834])
            ("ac-clear-variable-after-save" function (:arguments ("variable" "pred")) nil [50836 50966])
            ("ac-clear-variables-after-save" function nil nil [50968 51150])
            ("ac-clear-variable-every-minutes" function (:arguments ("variable" "minutes")) nil [51152 51283])
            ("ac-clear-variable-every-minute" function (:arguments ("variable")) nil [51285 51381])
            ("ac-clear-variable-every-10-minutes" function (:arguments ("variable")) nil [51383 51484])
            ("ac-clear-variables-every-minute" function nil nil [51486 51685])
            ("ac-cursor-on-diable-face-p" function (:arguments ("point")) nil [51715 51838])
            ("ac-trigger-command-p" function (:arguments ("command")) nil [51840 52186])
            ("ac-fallback-command" function (:arguments ("except-command")) nil [52188 52523])
            ("ac-compatible-package-command-p" function (:arguments ("command")) nil [52525 52740])
            ("ac-handle-pre-command" function nil nil [52742 53676])
            ("ac-handle-post-command" function nil nil [53678 54030])
            ("ac-setup" function nil nil [54032 54566])
            ("define-minor-mode" code nil nil [54568 55209])
            ("auto-complete-mode-maybe" function nil nil [55211 55409])
            ("define-global-minor-mode" code nil nil [55411 55533])
            ("ac-flyspell-workaround" function (:user-visible-flag t) nil [55582 55974])
            ("ac-linum-workaround" function (:user-visible-flag t) nil [55976 56261])
            ("ac-define-source" function (:arguments ("name" "source")) nil [56289 56640])
            ("ac-word-index" variable nil nil [56668 56694])
            ("ac-candidate-words-in-buffer" function (:arguments ("point" "prefix" "limit")) nil [56696 57596])
            ("ac-incremental-update-word-index" function nil nil [57598 58149])
            ("ac-update-word-index-1" function nil nil [58151 58572])
            ("ac-update-word-index" function nil nil [58574 58788])
            ("ac-word-candidates" function (:arguments ("buffer-pred")) nil [58790 59384])
            ("ac-define-source" code nil nil [59386 59459])
            ("ac-define-source" code nil nil [59461 59572])
            ("ac-define-source" code nil nil [59574 59809])
            ("ac-symbols-cache" variable nil nil [59834 59863])
            ("ac-clear-variable-every-10-minutes" code nil nil [59864 59918])
            ("ac-symbol-file" function (:arguments ("symbol" "type")) nil [59920 61404])
            ("ac-symbol-documentation" function (:arguments ("symbol")) nil [61406 63180])
            ("ac-symbol-candidates" function nil nil [63182 63468])
            ("ac-define-source" code nil nil [63470 63609])
            ("ac-functions-cache" variable nil nil [63636 63667])
            ("ac-clear-variable-every-10-minutes" code nil nil [63668 63724])
            ("ac-function-candidates" function nil nil [63726 63935])
            ("ac-define-source" code nil nil [63937 64125])
            ("ac-variables-cache" variable nil nil [64152 64183])
            ("ac-clear-variable-every-10-minutes" code nil nil [64184 64240])
            ("ac-variable-candidates" function nil nil [64242 64450])
            ("ac-define-source" code nil nil [64452 64595])
            ("ac-emacs-lisp-features" variable nil nil [64621 64656])
            ("ac-clear-variable-every-10-minutes" code nil nil [64657 64717])
            ("ac-emacs-lisp-feature-candidates" function nil nil [64719 65380])
            ("ac-define-source" code nil nil [65382 65559])
            ("defvaralias" code nil nil [65561 65625])
            ("ac-define-source" code nil nil [65644 65839])
            ("ac-define-source" code nil nil [65878 65985])
            ("ac-filename-cache" variable nil nil [66006 66036])
            ("ac-filename-candidate" function nil nil [66038 66688])
            ("ac-define-source" code nil nil [66690 66888])
            ("ac-define-source" code nil nil [66911 67000])
            ("auto-complete" package nil nil [67002 67026]))          
      :file "auto-complete.el"
      :pointmax 67058
      :fsize 67057
      :lastmodtime '(20760 3074)
      :unmatched-syntax nil)
    (semanticdb-table "auto-complete-pkg.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("define-package" code nil nil [1 94]))          
      :file "auto-complete-pkg.el"
      :pointmax 95
      :fsize 94
      :lastmodtime '(20760 3074)
      :unmatched-syntax nil))
  :file "!home!cory!dotfiles!.emacs.d!elpa!auto-complete-1.4!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
